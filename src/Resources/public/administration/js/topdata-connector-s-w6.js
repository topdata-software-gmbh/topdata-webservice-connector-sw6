(this.webpackJsonp=this.webpackJsonp||[]).push([["topdata-connector-s-w6"],{"/F1x":function(t){t.exports=JSON.parse('{"topdata-connector":{"header":"TopData Plugins","test":"Test","installDemoData":"Install demo data","testDisclamer":"Save changes before testing API connection","demoDisclamer":"Install demo products, than you can use console command for import, use default OEM/EAN mapping","testSuccessHeader":"Success!","testSuccessText":"We connected to the server!","testFailHeader":"Failed!","testFailText":"Something went wrong...","mainMenuItemGeneral":"TopData Plugins","descriptionTextModule":"TopData TopCONNECTOR info","pluginName":"TopData TopCONNECTOR","settings":"TopCONNECTOR settings","finder":{"pluginName":"TopData TopFINDER","settings":"TopFINDER settings","primaryBrands":"Brands display first","savePrimaryBrands":"Save"},"feed":{"pluginName":"TopData TopFEED","settings":"TopFEED settings"},"colors":{"pluginName":"TopData Colors","settings":"Colors settings"},"compareProducts":{"pluginName":"TopData Compare Products","settings":"Settings"},"productMenu":{"pluginName":"TopData Product Menu","settings":"Settings"},"productQuickView":{"pluginName":"TopData Product Quick View","settings":"Settings"},"categoryFilter":{"pluginName":"TopData Category Filter","settings":"Settings"}}}')},"ChV+":function(t){t.exports=JSON.parse('{"topdata-connector":{"header":"TopData Plugins","test":"Test","mainMenuItemGeneral":"TopData Plugins","descriptionTextModule":"TopData TopCONNECTOR Info","pluginName":"TopData TopCONNECTOR\\n","settings":"TopCONNECTOR Einstellungen","finder":{"pluginName":"TopData TopFINDER","settings":"TopFINDER Einstellungen","primaryBrands":"Top Marken","savePrimaryBrands":"Speichern"},"feed":{"pluginName":"TopData TopFEED","settings":"TopFEED Einstellungen"},"colors":{"pluginName":"TopData Colors","settings":"Colors Einstellungen"},"compareProducts":{"pluginName":"TopData Compare Products","settings":"Einstellungen"},"productMenu":{"pluginName":"TopData Product Menu","settings":"Einstellungen"},"productQuickView":{"pluginName":"TopData Product Quick View","settings":"Einstellungen"},"categoryFilter":{"pluginName":"TopData Kategoriefilter","settings":"Einstellungen"}}}')},FPF4:function(t,e){t.exports="{% block topdata_connector %}\n    <sw-page>\n        <template slot=\"smart-bar-header\">\n            <h2>\n                {{ $tc('topdata-connector.header') }}\n            </h2>\n        </template>\n\n        <template slot=\"smart-bar-actions\">\n        </template>\n\n        <template slot=\"content\">\n            <sw-card-view>\n                <sw-loader v-if=\"isLoading\">\n                </sw-loader>\n                <sw-card v-if='pluginsEnabled.TopdataConnectorSW6'>\n                    <h3>{{ $tc('topdata-connector.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataConnectorSW6' }}\">\n                        {{ $tc('topdata-connector.settings') }}\n                    </sw-button>\n                    <sw-button-process\n                        :isLoading=\"isLoading\"\n                        :processSuccess=\"processSuccess\"\n                        variant=\"primary\"\n                        @process-finish=\"testFinish\"\n                        @click=\"onClickTest\">\n                        {{ $tc('topdata-connector.test') }}\n                    </sw-button-process>\n                    <sw-button-process\n                        :isLoading=\"isLoading\"\n                        :processSuccess=\"demoSuccess\"\n                        variant=\"primary\"\n                        @process-finish=\"demoFinish\"\n                        @click=\"onClickDemo\">\n                        {{ $tc('topdata-connector.installDemoData') }}\n                    </sw-button-process>\n                </sw-card>\n                    \n                <sw-card v-if='pluginsEnabled.TopdataTopFinderProSW6'>\n                    <h3>{{ $tc('topdata-connector.finder.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataTopFinderProSW6' }}\">\n                        {{ $tc('topdata-connector.finder.settings') }}\n                    </sw-button>\n                    <div>\n                        <sw-multi-select\n                            :label=\"$tc('topdata-connector.finder.primaryBrands')\"\n                            :options=\"availableBrands\"\n                            :isLoading=\"brandsLoading\"\n                            valueProperty=\"value\"\n                            labelProperty=\"label\"\n                            @change=\"onChangeBrandsPrimary\"\n                            :value=\"brandsPrimary\">\n                        </sw-multi-select>\n                        <sw-button-process\n                            :isLoading=\"brandsLoading\"\n                            variant=\"primary\"\n                            @click=\"onSavePrimaryBrands\">\n                            {{ $tc('topdata-connector.finder.savePrimaryBrands') }}\n                        </sw-button-process>\n                    </div>\n                </sw-card>\n                        \n                <sw-card v-if='pluginsEnabled.TopdataTopFeedSW6'>\n                    <h3>{{ $tc('topdata-connector.feed.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataTopFeedSW6' }}\">\n                        {{ $tc('topdata-connector.feed.settings') }}\n                    </sw-button>\n                </sw-card>\n                    \n                <sw-card v-if='pluginsEnabled.TopdataColors'>\n                    <h3>{{ $tc('topdata-connector.colors.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataColors' }}\">\n                        {{ $tc('topdata-connector.colors.settings') }}\n                    </sw-button>\n                </sw-card>\n                    \n                <sw-card v-if='pluginsEnabled.TopdataCompareProducts'>\n                    <h3>{{ $tc('topdata-connector.compareProducts.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataCompareProducts' }}\">\n                        {{ $tc('topdata-connector.compareProducts.settings') }}\n                    </sw-button>\n                </sw-card>\n                    \n                <sw-card v-if='pluginsEnabled.TopdataProductMenu'>\n                    <h3>{{ $tc('topdata-connector.productMenu.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataProductMenu' }}\">\n                        {{ $tc('topdata-connector.productMenu.settings') }}\n                    </sw-button>\n                </sw-card>\n                    \n                <sw-card v-if='pluginsEnabled.TopdataProductQuickView'>\n                    <h3>{{ $tc('topdata-connector.productQuickView.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataProductQuickView' }}\">\n                        {{ $tc('topdata-connector.productQuickView.settings') }}\n                    </sw-button>\n                </sw-card>\n                    \n                <sw-card v-if='pluginsEnabled.TopdataCategoryFilterSW6'>\n                    <h3>{{ $tc('topdata-connector.categoryFilter.pluginName') }}</h3>\n                    <sw-button :routerLink=\"{ name: 'sw.extension.config', params: { namespace: 'TopdataCategoryFilterSW6' }}\">\n                        {{ $tc('topdata-connector.categoryFilter.settings') }}\n                    </sw-button>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n"},QuZw:function(t,e){t.exports="{% block sw_settings_content_tab_plugins %}\n    {% parent %}\n\n    <sw-tabs-item \n        :route=\"{ name: 'topdata.connector.info' }\" \n        title=\"{{ $tc('topdata-connector.header') }}\">\n        {{ $tc('topdata-connector.header') }}\n    </sw-tabs-item>\n{% endblock %}"},Rsks:function(t,e){t.exports='<div>\n    <div>{{ $tc(\'topdata-connector.testDisclamer\') }}</div>\n    <sw-button-process\n        :isLoading="isLoading"\n        :processSuccess="processSuccess"\n        variant="primary"\n        @process-finish="testFinish"\n        @click="onClickTest">\n        {{ $tc(\'topdata-connector.test\') }}\n    </sw-button-process>\n    <div>{{ $tc(\'topdata-connector.demoDisclamer\') }}</div>\n    <sw-button-process\n        :isLoading="isLoading"\n        :processSuccess="demoSuccess"\n        variant="primary"\n        @process-finish="demoFinish"\n        @click="onClickDemo">\n        {{ $tc(\'topdata-connector.installDemoData\') }}\n    </sw-button-process>\n</div>'},scl4:function(t,e,n){"use strict";n.r(e);var a=n("FPF4"),s=n.n(a);const{Mixin:o}=Shopware;Shopware.Component.register("topdata-connector-info",{template:s.a,metaInfo(){return{title:this.$createTitle()}},mixins:[o.getByName("notification")],inject:["systemConfigApiService","TopdataApiCredentialsService"],data:()=>({isLoading:!1,processSuccess:!1,demoSuccess:!1,config:{},pluginsEnabled:{TopdataConnectorSW6:!1,TopdataTopFinderProSW6:!1,TopdataTopFeedSW6:!1,TopdataColors:!1},availableBrands:[],brandsLoading:!0,brandsPrimary:[]}),computed:{},created(){this.onGetActivePlugins(),this.loadBrands()},methods:{onGetActivePlugins(){var t=this;this.TopdataApiCredentialsService.getActivePlugins().then((e=>{var n=e.activePlugins;for(let[e,a]of Object.entries(n))t.pluginsEnabled[a]=!0})).catch((t=>{console.log(t)}))},onChangeBrandsPrimary(t){this.brandsPrimary=t},loadBrands(){this.brandsLoading=!0,this.TopdataApiCredentialsService.loadBrands().then((t=>{if(t.brandsCount>0){var e=t.brands;for(let[t,n]of Object.entries(e))this.availableBrands.push({value:t,label:n})}if(t.primaryCount>0){var n=t.primary;for(let[t,e]of Object.entries(n))this.brandsPrimary.push(t)}this.brandsLoading=!1})).catch((t=>{this.brandsLoading=!1}))},onSavePrimaryBrands(){this.brandsLoading=!0,this.TopdataApiCredentialsService.savePrimaryBrands(this.brandsPrimary).then((t=>{this.brandsLoading=!1})).catch((t=>{this.brandsLoading=!1}))},onClickTest(){this.isLoading=!0,this.TopdataApiCredentialsService.testApiCredentials().then((t=>{if("yes"===t.credentialsValid){let t="Test Success",e="We connected to the server!";this.createNotificationSuccess({title:t,message:e}),this.processSuccess=!0}else{let e="Connection Test Error",n=t.additionalData?t.additionalData:"Something went wrong...";this.createNotificationError({title:e,message:n})}this.isLoading=!1})).catch((t=>{this.createNotificationError({title:"Test Error",message:"something went wrong"}),this.isLoading=!1,this.processSuccess=!1}))},onClickDemo(){this.isLoading=!0,this.TopdataApiCredentialsService.installDemoData().then((t=>{if(t.success){let e="Install success",n=t.additionalInfo?t.additionalInfo:"Everything ok...";this.createNotificationSuccess({title:e,message:n}),this.demoSuccess=!0}else{let e="Demo data failed",n=t.additionalInfo?t.additionalInfo:"Something went wrong...";this.createNotificationError({title:e,message:n})}this.isLoading=!1})).catch((t=>{this.createNotificationError({title:"Test Error",message:"something went wrong"}),this.isLoading=!1,this.demoSuccess=!1}))},demoFinish(){this.demoSuccess=!1},testFinish(){this.processSuccess=!1}}});var i=n("ChV+"),r=n("/F1x");const{Module:c}=Shopware;c.register("topdata-connector",{type:"plugin",name:"Topdata Connector",title:"topdata-connector.mainMenuItemGeneral",description:"topdata-connector.descriptionTextModule",color:"#9AA8B5",icon:"default-action-settings",snippets:{"de-DE":i,"en-GB":r},routes:{info:{component:"topdata-connector-info",path:"info",meta:{parentPath:"sw.settings.index"}}}});var d=n("QuZw"),p=n.n(d);Shopware.Component.override("sw-settings-index",{template:p.a});const l=Shopware.Classes.ApiService;var u=class extends l{constructor(t,e,n="topdata"){super(t,e,n)}loadBrands(){const t=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/load-brands`,{params:{},headers:t}).then((t=>l.handleResponse(t)))}savePrimaryBrands(t){const e=this.getBasicHeaders(),n={primaryBrands:t};return this.httpClient.post(`${this.getApiBasePath()}/save-primary-brands`,n,{params:{},headers:e}).then((t=>l.handleResponse(t)))}testApiCredentials(){const t=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/connector-test`,{params:{},headers:t}).then((t=>l.handleResponse(t)))}getActivePlugins(){const t=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/connector-plugins`,{params:{},headers:t}).then((t=>l.handleResponse(t)))}installDemoData(){const t=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/connector-install-demodata`,{params:{},headers:t}).then((t=>l.handleResponse(t)))}},g=n("Rsks"),h=n.n(g);const{Mixin:m}=Shopware;Shopware.Component.register("topdata-connector-test-connection",{template:h.a,mixins:[m.getByName("notification")],inject:["systemConfigApiService","TopdataApiCredentialsService"],data:()=>({isLoading:!1,processSuccess:!1,demoSuccess:!1}),methods:{onClickTest(){this.isLoading=!0,this.TopdataApiCredentialsService.testApiCredentials().then((t=>{if("yes"===t.credentialsValid){let t=this.$tc("topdata-connector.testSuccessHeader"),e=this.$tc("topdata-connector.testSuccessText");this.createNotificationSuccess({title:t,message:e}),this.processSuccess=!0}else{let e=this.$tc("topdata-connector.testFailHeader"),n=t.additionalData?t.additionalData:this.$tc("topdata-connector.testFailText");this.createNotificationError({title:e,message:n})}this.isLoading=!1})).catch((t=>{let e=this.$tc("topdata-connector.testFailHeader"),n=this.$tc("topdata-connector.testFailText");this.createNotificationError({title:e,message:n}),this.isLoading=!1,this.processSuccess=!1}))},testFinish(){this.processSuccess=!1},onClickDemo(){this.isLoading=!0,this.TopdataApiCredentialsService.installDemoData().then((t=>{if(t.success){let e="Install success",n=t.additionalInfo?t.additionalInfo:"Everything ok...";this.createNotificationSuccess({title:e,message:n}),this.demoSuccess=!0}else{let e="Demo data failed",n=t.additionalInfo?t.additionalInfo:"Something went wrong...";this.createNotificationError({title:e,message:n})}this.isLoading=!1})).catch((t=>{this.createNotificationError({title:"Test Error",message:"something went wrong"}),this.isLoading=!1,this.demoSuccess=!1}))},demoFinish(){this.demoSuccess=!1}}});var w=Shopware.Application;w.addServiceProvider("TopdataApiCredentialsService",(function(t){var e=w.getContainer("init");return new u(e.httpClient,t.loginService)}))}},[["scl4","runtime"]]]);